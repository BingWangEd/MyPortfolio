{"version":3,"sources":["queries/queries.js","containers/NavBar/NavSelectButton.js","containers/NavBar/NavBarItem.js","containers/NavBar/ExperienceButton.js","containers/NavBar/NavBar.js","containers/NavBar/NavBarContainer.js","actions/index.js","containers/Timeline/ScrollReveal.js","containers/Timeline/ExperienceItem.js","containers/Timeline/TimelineContainer.js","containers/Home/ScrollButton.js","containers/Home/HomeImage.js","App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["getCategoriesQuery","gql","_templateObject","getAllExperiencesQuery","_templateObject2","_templateObject3","getExperienceByCategoryQuery","_templateObject4","NavSelectButton","_this","this","styles","buttonStyle","width","display","props","selectedExperienceCategory","includes","category","react_default","a","createElement","style","onClick","e","unselectExperienceCategory","src","alt","data","experienceByCategory","selectExperienceCategory","Component","connect","state","graphql","options","variables","Radium","textParent","position","text","paddingLeft","bottom","color","_ref","updateExperienceData","NavBar_NavSelectButton","ExperienceButton","length","categories","unselectAllExperienceCategories","experiences","selectAllExperienceCategories","unselectFunMode","menuOpen","NavBar","bounceKeyFrames","keyframes","0%","transform","20%","40%","50%","60%","80%","100%","wrapper","top","zIndex","padding","float","@media screen and (max-width: 900px)","background","subexperience","marginLeft","slideIcon","bounceEffect","right","animation","animationName","slideIconLeft","slideButton","forceUpdate","dataIsLoading","center","NavBar_ExperienceButton","map","index","NavBar_NavBarItem","key","ifLoaded","NavBarContainer","experienceData","loading","allCategories","containers_NavBar_NavBar","selectFunMode","compose","newExperiences","type","unselectedExperienceCategory","experienceCategories","ifSelectFunMode","name","ScrollReveal","slide","overflow","minHeight","boxSizing","boxShadow","backgroundRepeat","backgroundSize","backgroundPosition","backgroundAttachment","@media screen and (min-width: 600px)","words","fontSize","opacity","left","link","textDecoration","lineDeco","borderLeft","marginBottom","trialDiv","height","border","story","@media screen and (min-width: 900px)","orange","ExperienceItem","componentDidMount","reveal","refs","box1","origin","duration","delay","distance","scale","easing","isOdd","num","className","id","ref","backgroundImage","experience","href","organization","target","rel","startDate","endDate","stroy","enhance","TimelineContainer","Timeline_ExperienceItem","shade","backgroundColor","quote","marginTop","header","paddingBottom","intro","Home_ScrollButton","App","style_root","NavBar_NavBarContainer","Home_HomeImage","Timeline_TimelineContainer","withRouter","Boolean","window","location","hostname","match","MonthsEnum","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","Object","freeze","compareExperiencesDates","exp1","exp2","date1","split","date2","year1","parseInt","year2","month1","month2","reducer","action","assign","company","companyName","companyCity","city","selectedCompanyId","concat","sort","filter","toLowerCase","replace","i","funMode","__webpack_require__","d","__webpack_exports__","initialState","client","ApolloClient","uri","store","createStore","ReactDOM","render","react_apollo_browser_umd","es","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.37108fdd.chunk.js","sourcesContent":["import {gql} from 'apollo-boost';\n\nconst getCategoriesQuery=gql`\n{\n  experiences{\n    allCategories\n  }\n}\n`\n\nconst getOrganizationsQuery=gql`\n{\n  organizations{\n    id,\n    name,\n    city,\n    description,\n    link,\n    experiences{\n      position,\n      degree,\n      startDate\n    }\n  }\n}\n`\n\nconst getAllExperiencesQuery=gql`\n{\n  experiences{\n    position,\n    startDate,\n    endDate,\n    organization{\n      name,\n      city,\n      description,\n      link\n    },\n    category,\n    story,\n    allCategories\n  }\n}\n`\n\nconst getExperienceByCategoryQuery=gql`\nquery($category: String!){\n  experienceByCategory(category: $category){\n    position,\n    startDate,\n    endDate,\n    organization{\n      name,\n      city,\n      description,\n      link\n    },\n    category,\n    story\n  }\n}\n`\n\nexport {getCategoriesQuery, getOrganizationsQuery, getAllExperiencesQuery, getExperienceByCategoryQuery};","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Radium from 'radium';\nimport {graphql} from 'react-apollo';\nimport {getExperienceByCategoryQuery} from '../../queries/queries';\n\nclass NavSelectButton extends Component {\n  render(){\n    const styles = {\n      buttonStyle: {\n        width: '35px',\n        display: 'inline'\n      }\n    };\n\n    if (this.props.selectedExperienceCategory.includes(this.props.category)) {\n      return (<img style={[styles.buttonStyle]} onClick={(e)=>this.props.unselectExperienceCategory(this.props.category)} src = {process.env.PUBLIC_URL+ 'icons/checked_checkbox.png'} alt='checked_checkbox'/>)\n    } else {\n      const data = this.props.data.experienceByCategory;\n      return (<img style={[styles.buttonStyle]} onClick={(e)=>{this.props.selectExperienceCategory(this.props.category, {data});}} src = {process.env.PUBLIC_URL+ 'icons/unchecked_checkbox.png'} alt='unchecked_checkbox'/>)\n    }\n  }\n}\n\nfunction mapStateToProps(state){\n  return state\n}\n\nexport default connect(\n  mapStateToProps\n)(graphql(getExperienceByCategoryQuery, {\n  options: (props)=>{\n    return{\n      variables:{\n        category: props.category\n      }\n    }\n  }\n})(Radium(NavSelectButton)))","import React from 'react';\nimport Radium from 'radium';\nimport NavSelectButton from './NavSelectButton';\n\nconst styles = {\n  textParent: {\n    position: 'relative'\n  },\n  text: {\n    display: 'inline',\n    paddingLeft: '5px',\n    position: 'absolute',\n    bottom: '0.1px',\n    color: 'white'\n  }\n};\n\nconst NavBarItem = ({category, selectExperienceCategory, unselectExperienceCategory, updateExperienceData}) => (\n  <div style={[styles.textParent]}>\n    <NavSelectButton \n      category={category}\n      selectExperienceCategory={selectExperienceCategory}\n      unselectExperienceCategory = {unselectExperienceCategory}\n    /><p style={[styles.text]}>{category}</p>\n  </div>\n)\n\nexport default Radium(NavBarItem);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Radium from 'radium';\nimport {graphql} from 'react-apollo';\nimport {getAllExperiencesQuery} from '../../queries/queries';\n\nclass ExperienceButton extends Component {\n  render(){\n    const styles = {\n      buttonStyle: {\n        width: '35px'\n      },\n      textParent: {\n        position: 'relative'\n      },\n      text: {\n        display: 'inline',\n        paddingLeft: '5px',\n        position: 'absolute',\n        bottom: '0.1px',\n        color: 'white'\n      }\n    };\n\n    if (this.props.selectedExperienceCategory.length===this.props.categories.length) {\n      return (<div style={[styles.textParent]}><img onClick={(e)=>this.props.unselectAllExperienceCategories()} src = {process.env.PUBLIC_URL+ 'icons/checked_checkbox.png'} style={[styles.buttonStyle]} alt='checked_checkbox'/><p style={[styles.text]}>My Professional Experiences</p></div>)\n    } else {\n      let data = this.props.data.experiences;\n      return (<div style={[styles.textParent]}><img onClick={(e)=>{this.props.selectAllExperienceCategories(this.props.categories, data); this.props.unselectFunMode()}} src = {process.env.PUBLIC_URL+ 'icons/unchecked_checkbox.png'} style={[styles.buttonStyle]} alt='unchecked_checkbox'/><p style={[styles.text]}>My Professional Experiences</p></div>)\n    }\n  }\n}\n\nfunction mapStateToProps(state){\n  return state\n}\n\nexport default connect(\n  mapStateToProps\n)(graphql(getAllExperiencesQuery)(Radium(ExperienceButton)))","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Radium from 'radium';\nimport NavBarItem from './NavBarItem';\n\nimport ExperienceButton from './ExperienceButton';\n\nlet menuOpen = false;\n\nclass NavBar extends Component {\n  render(){\n    let bounceKeyFrames = Radium.keyframes({\n      '0%': {\n        transform: 'translateX(0)'\n      }, \n      '20%': {\n        transform: 'translateX(0)'\n      }, \n      '40%': {\n        transform: 'translateX(-30px)'\n      },\n      '50%': {\n        transform: 'translateX(0)'\n      },\n      '60%': {\n        transform: 'translateX(-15px)'\n      },\n      '80%': {\n        transform: 'translateX(0)'\n      },\n      '100%': {\n        transform: 'translateX(0)'\n      }\n    }, 'bounce')\n\n    const styles = {\n      wrapper: {\n        position: 'sticky',\n        top: 0,\n        zIndex: '9',\n        width: '320px',\n        padding: '35px',\n        display: 'inline-block',\n        float: 'left',\n        \n        '@media screen and (max-width: 900px)': {\n          background: menuOpen ? 'rgba(50, 50, 50, 0.6)' : null\n        }\n      },\n      subexperience: {\n        marginLeft: '35px'\n      },\n      slideIcon: {\n        width: '35px'\n      },\n      bounceEffect: {\n        position: 'absolute',\n        right: 0,\n        zIndex: '20',\n        animation: 'bounce 2s 2',\n        animationName: bounceKeyFrames\n      },\n      slideIconLeft: {\n        width: '35px',\n        position: 'absolute',\n        right: 0,\n        zIndex: '20'\n      }\n    }\n\n    let openMenu = () => {\n      menuOpen = true;\n      this.forceUpdate();\n    }\n\n    let closeMenu = () => {\n      menuOpen = false;\n      this.forceUpdate();\n    }\n\n    let slideButton = menuOpen ? \n      (<div onClick={()=>{closeMenu()}}><img \n        style={[styles.slideIconLeft]}\n        src = {process.env.PUBLIC_URL+ 'icons/slide_left.png'}\n        alt='slide left'/></div>) : \n      (<div style={[styles.bounceEffect, styles.slideIcon]} onClick={()=>{openMenu()}}><img \n        style={[styles.slideIcon]}\n        src = {process.env.PUBLIC_URL+ 'icons/slide_right.png'}\n        alt='slide right'/></div>)\n\n    if (this.props.dataIsLoading) {\n      return (\n        <div style={[styles.center]}>\n          <div>Data Is Loading ...</div>\n        </div>)\n    } else {\n      return (\n        <div style={[styles.wrapper, { marginLeft: menuOpen ? 0 : '-285px'}]}>\n          {slideButton}\n          <ExperienceButton \n            categories = {this.props.categories}\n            selectAllExperienceCategories = {this.props.selectAllExperienceCategories}\n            unselectAllExperienceCategories = {this.props.unselectAllExperienceCategories}\n            unselectFunMode = {this.props.unselectFunMode}\n            updateExperienceData = {this.props.updateExperienceData}\n          />\n          <div style={[styles.subexperience]}>\n          {this.props.categories.map((category, index)=>{\n            \n              return (\n                <NavBarItem \n                  key={index} \n                  category = {category} \n                  selectExperienceCategory={this.props.selectExperienceCategory} \n                  unselectExperienceCategory={this.props.unselectExperienceCategory}\n               />)\n\n          })}\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\nfunction mapStateToProps(state){\n  return state\n}\n\nexport default connect(\n  mapStateToProps\n)(Radium(NavBar))","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {graphql, compose} from 'react-apollo';\nimport {getCategoriesQuery, getAllExperiencesQuery} from '../../queries/queries';\nimport {selectExperienceCategory, unselectExperienceCategory, selectAllExperienceCategories, unselectAllExperienceCategories, selectFunMode, unselectFunMode} from '../../actions/index';\nimport NavBar from './NavBar';\n\nlet ifLoaded = false\n\nclass NavBarContainer extends Component {\n\n  render(){\n    let data = this.props.getCategoriesQuery;\n    let categories = null;\n    let dataIsLoading = true;\n    let experienceData = this.props.getAllExperiencesQuery;\n\n    if (!data.loading){\n      categories = data.experiences[0].allCategories\n    }\n\n    if (!ifLoaded && !experienceData.loading){\n      this.props.selectAllExperienceCategories(categories, experienceData.experiences)\n      ifLoaded = true\n    }\n\n    if (!data.loading && !experienceData.loading){\n      dataIsLoading = false;\n    }\n    return (\n        <NavBar\n          categories = {categories}\n          dataIsLoading = {dataIsLoading}\n          selectExperienceCategory = {this.props.selectExperienceCategory}\n          unselectExperienceCategory = {this.props.unselectExperienceCategory}\n          selectAllExperienceCategories = {this.props.selectAllExperienceCategories}\n          unselectAllExperienceCategories = {this.props.unselectAllExperienceCategories}\n          selectFunMode = {this.props.selectFunMode}\n          unselectFunMode = {this.props.unselectFunMode}\n        />\n    )\n  }\n}\n\nfunction mapStateToProps(state){\n  return state\n}\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    {selectExperienceCategory, unselectExperienceCategory, selectAllExperienceCategories, unselectAllExperienceCategories, selectFunMode, unselectFunMode}\n  ),\n  graphql(getCategoriesQuery, {name: \"getCategoriesQuery\"}),\n  graphql(getAllExperiencesQuery, {name: \"getAllExperiencesQuery\"})\n)(NavBarContainer);\n","export const updateCompany = (company) => {\n  return {\n    type: 'UPDATE_COMPANY',\n    company\n  }\n}\n\nexport const updateCompanyName = (name) => {\n  return {\n    type: 'UPDATE_COMPANY_NAME',\n    name\n  }\n}\n\nexport const updateCompanyCity = (city) => {\n  return {\n    type: 'UPDATE_COMPANY_CITY',\n    city\n  }\n}\n\nexport const selectCompany = (selectedCompanyId) => {\n  return {\n    type: 'SELECT_COMPANY',\n    selectedCompanyId\n  }\n}\n\nexport const selectExperienceCategory = (selectedExperienceCategory, newExperiences) => {\n  return {\n    type: 'SELECT_EXPERIENCE_CATEGORY',\n    selectedExperienceCategory,\n    newExperiences\n  }\n}\n\nexport const unselectExperienceCategory = (unselectedExperienceCategory) => {\n  return {\n    type: 'UNSELECT_EXPERIENCE_CATEGORY',\n    unselectedExperienceCategory\n  }\n}\n\nexport const selectAllExperienceCategories = (experienceCategories, experiences) => {\n\n  return {\n    type: 'SELECT_ALL_EXPERIENCE_CATEGORIES',\n    experienceCategories,\n    experiences\n  }\n}\n\nexport const unselectAllExperienceCategories = () => {\n  return {\n    type: 'UNSELECT_ALL_EXPERIENCE_CATEGORIES'\n  }\n}\n\nexport const selectFunMode = () => {\n  return {\n    type: 'SELECT_FUN_MODE',\n    ifSelectFunMode: true\n  }\n}\n\nexport const unselectFunMode = () => {\n  return {\n    type: 'UNSELECT_FUN_MODE',\n    ifSelectFunMode: false\n  }\n}","import ScrollReveal from 'scrollreveal';\nexport default ScrollReveal();","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Radium from 'radium';\nimport './Experience.css';\n\nimport { compose } from 'redux';\nimport ScrollReveal from './ScrollReveal.js';\n\nconst styles = {\n  slide: {\n    overflow: 'hidden',\n    color: 'white',\n    zIndex: '2',\n    padding: '15vh 10%',\n    minHeight: '100vh',\n    width: '100vw',\n    boxSizing: 'border-box',\n    boxShadow: '0 -1px 10px rgba(0, 0, 0, .7)',\n    backgroundRepeat: 'cover', \n    backgroundSize: '120%',\n    backgroundPosition: 'center',\n    backgroundAttachment: 'fixed',\n    position:'relative',\n    '@media screen and (min-width: 600px)': {\n      padding: '25vh 10%'\n    }\n  },\n  words: {\n    width: '60%',\n    paddingLeft: '35%',\n    color: 'white'\n  },\n  category: {\n    fontSize: '550%',\n    position: 'absolute',\n    opacity: '0.1',\n    bottom: '-150px',\n    left: 0\n  },\n  link: {\n    // textDecoration: 'underline solid #FF634D',\n    textDecoration: 'none',\n    fontSize: '1.17em',\n    color: 'white',\n    zIndex: '25'\n  },\n  lineDeco: {\n    borderLeft: '4px solid #FF634D',\n    paddingLeft: '15px',\n    marginBottom: '50px'\n  },\n  trialDiv: {\n    height: '500px',\n    border: '5px solid black'\n  },\n  story: {\n    fontSize: '1.5em',\n    '@media screen and (min-width: 900px)': {\n      fontSize: '2em'\n    }\n  },\n  orange: {\n    color: '#FF634D'\n  }\n};\n\nclass ExperienceItem extends Component {\n\n  componentDidMount = () => {\n    const config = {\n      origin: 'bottom',\n      duration: 800,\n      delay: 150,\n      distance: '300px',\n      scale: 1.3,\n      easing: 'ease',\n    }\n\n    ScrollReveal.reveal(this.refs.box1, config)\n  }\n\n  render() {\n    let isOdd = this.props.num % 2 === 0\n    return (\n      <section className='testimonial' id='testimonials'>\n        <div className='row' ref='box1'>\n          <div style={[styles.slide, {backgroundImage: isOdd ? \"url('\"+ process.env.PUBLIC_URL +\"Images/OrangeBackground.jpg')\" : \"url('\"+ process.env.PUBLIC_URL +\"Images/GrayBackground.jpg')\"}]}>\n            <div style={[styles.words]}>\n              <div style={[styles.lineDeco]}>\n                <h3>{this.props.experience.position} <span style={[styles.orange]}>@</span> \n                <a href={this.props.experience.organization.link} target=\"_blank\" rel=\"noopener noreferrer\" style={[styles.link]}> {this.props.experience.organization.name}</a></h3>\n                <p>{this.props.experience.startDate} - {this.props.experience.endDate}</p>\n              </div>\n              <h1 style={[styles.stroy]}>{this.props.experience.story}</h1>\n            </div>\n            <div style={[styles.category]}><h1>{this.props.experience.category}</h1></div>\n          </div>\n      </div>\n      </section>\n    )\n  }\n}\n\n\nfunction mapStateToProps(state){\n  return state\n}\n\nconst enhance = compose(\n  connect(mapStateToProps, null),\n  Radium\n)\n\nexport default enhance(ExperienceItem)\n\n// export default connect(\n//   mapStateToProps\n// )(Radium(ExperienceItem));","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport ExperienceItem from './ExperienceItem';\n\nclass TimelineContainer extends Component {\n  render(){\n    return (\n        <div>\n          {this.props.experiences.map((experience, index)=>{\n            return (<ExperienceItem \n              key={index}\n              experience={experience}\n              num={index}\n            />)\n          })}\n        </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state){\n  return state\n}\n\nexport default connect(\n  mapStateToProps\n)(TimelineContainer)","import React from 'react';\nimport Radium from 'radium';\n\nlet bounceKeyFrames = Radium.keyframes({\n  '0%': {\n    transform: 'translateY(0)'\n  }, \n  '20%': {\n    transform: 'translateY(0)'\n  }, \n  '50%': {\n    transform: 'translateY(0)'\n  }, \n  '80%': {\n    transform: 'translateY(0)'\n  }, \n  '100%': {\n    transform: 'translateY(0)'\n  },\n  '40%': {\n    transform: 'translateY(-30px)'\n  },\n  '60%': {\n    transform: 'translateY(-15px)'\n  }\n}, 'bounce')\n\nconst styles = {\n  bounceEffect: {\n    animation: 'bounce 2s infinite',\n    animationName: bounceKeyFrames\n  },\n  buttonStyle: {\n    width: '40px'\n  },\n  center: {\n    marginBottom: '20px',\n    color: 'white',\n    position: 'absolute',\n    bottom: 0,\n    left: '50%',\n    transform: 'translate(-50%, 0)'\n  }\n};\n\nconst ScrollButton = () => (\n  <div style={[styles.center]}>\n    <div style={[styles.bounceEffect]}><img style={[styles.buttonStyle]} src = {process.env.PUBLIC_URL+ 'icons/scroll_down.png'} alt='scroll down'/></div>Scroll\n  </div>\n)\n\nexport default Radium(ScrollButton);","import React from 'react';\nimport Radium from 'radium';\nimport '../Timeline/Experience.css';\nimport ScrollButton from './ScrollButton';\n\nconst styles = {\n  slide: {\n    zIndex: '2',\n    position: 'relative',\n    minHeight: '100vh',\n    width: '100vw',\n    boxSizing: 'border-box',\n    boxShadow: '0 -1px 10px rgba(0, 0, 0, .7)',\n    backgroundRepeat: 'no-repeat', \n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    backgroundAttachment: 'fixed'\n  },\n  shade: {\n    backgroundColor: 'rgba(50, 50, 50, 0.6)',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    minHeight: '100vh'\n  },\n  quote: {\n    width: '50%',\n    paddingLeft: '35%',\n    color: 'white',\n    marginTop: '25vh'\n  },\n  header: {\n    paddingBottom: '30px',\n    fontSize: '1.5em',\n    '@media screen and (min-width: 900px)': {\n      fontSize: '2em'\n    }\n  },\n  intro: {\n    borderLeft: '4px solid #FF634D',\n    paddingLeft: '15px'\n  }\n};\n\nconst HomeImage = () => (\n  <div style={[styles.slide,  {backgroundImage: \"url('\"+ process.env.PUBLIC_URL +\"Images/Teaching.jpg')\"}]}>\n    <div style={[styles.shade]}>\n      <div style={[styles.quote]}>\n        <h1 style={[styles.header]}>I aspire to develop the best learning experience for students.</h1>\n        <div style={[styles.intro]}>\n          <p>Bing Wang</p>\n          <p>EdTech Product Developer</p>\n        </div>\n      </div>\n      <ScrollButton />\n    </div>\n  </div>\n)\n\nexport default Radium(HomeImage);","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport Radium, {StyleRoot} from 'radium';\nimport {withRouter} from 'react-router-dom';\nimport NavBarContainer from './containers/NavBar/NavBarContainer';\nimport TimelineContainer from './containers/Timeline/TimelineContainer.js';\nimport HomeImage from './containers/Home/HomeImage.js';\n\nclass App extends Component {\n\n  render() {\n    return (\n        <StyleRoot>\n          <div className=\"App\">\n              <NavBarContainer />\n              <HomeImage />\n              <TimelineContainer />\n            </div>\n        </StyleRoot>\n\n    );\n  }\n}\n\nfunction mapStateToProps(state){\n  return state\n}\n\nexport default withRouter(connect(\n  mapStateToProps\n)(Radium(App)))","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const MonthsEnum = {\"Jan\":1, \"Feb\":2, \"Mar\":3, \"Apr\":4, \"May\":5, \"Jun\":6, \"Jul\":7, \"Aug\":8, \"Sep\":9, \"Oct\":10, \"Nov\":11, \"Dec\":12,}\nObject.freeze(MonthsEnum)\n\nconst compareExperiencesDates = (exp1, exp2) => {\n  const date1 = exp1.startDate.split(' ');\n  const date2 = exp2.startDate.split(' ');\n  const year1 = parseInt(date1[1]);\n  const year2 = parseInt(date2[1]);\n  const month1 = date1[0];\n  const month2 = date2[0];\n  if (year1===year2){\n    if (MonthsEnum[month1]>MonthsEnum[month2])\n      return 1\n    else if (MonthsEnum[month1]===MonthsEnum[month2])\n      return 0\n    else \n      return -1\n  } else {\n    if (year1>year2)\n      return 1\n    else\n      return -1\n  }\n}\n\nlet reducer = function (state, action){\n  switch (action.type){\n    case 'UPDATE_COMPANY':\n      return Object.assign({}, state, {\n         company: action.company\n      })\n    case 'UPDATE_COMPANY_NAME':\n      return Object.assign({}, state, {\n         companyName: action.name\n      })\n    case 'UPDATE_COMPANY_CITY':\n      return Object.assign({}, state, {\n         companyCity: action.city\n      })\n    case 'SELECT_COMPANY':\n      return Object.assign({}, state, {\n         selectedCompanyId: action.selectedCompanyId\n      })\n    case 'SELECT_EXPERIENCE_CATEGORY':\n      let experiences = state.experiences.concat(action.newExperiences.data)\n      experiences=experiences.sort(compareExperiencesDates)\n      return Object.assign({}, state, {\n         selectedExperienceCategory: state.selectedExperienceCategory.concat([action.selectedExperienceCategory]),\n         experiences: experiences\n      })\n    case 'UNSELECT_EXPERIENCE_CATEGORY':\n      const newExperiences = state.experiences.filter(e=>{\n          const left = e.category.toLowerCase().replace('_', ' ')\n          const right = action.unselectedExperienceCategory.toLowerCase();\n          return left !== right\n        })\n      return Object.assign({}, state, {\n         selectedExperienceCategory: state.selectedExperienceCategory.filter(i=>i!==action.unselectedExperienceCategory),\n         experiences: newExperiences\n      })\n    case 'UNSELECT_ALL_EXPERIENCE_CATEGORIES':\n\n      return Object.assign({}, state, {\n         selectedExperienceCategory: [],\n         experiences: []\n      })\n    case 'SELECT_ALL_EXPERIENCE_CATEGORIES':\n      //console.log(action.experiences)\n      return Object.assign({}, state, {\n         selectedExperienceCategory: action.experienceCategories,\n         experiences: action.experiences.sort(compareExperiencesDates)\n      })\n    case 'SELECT_FUN_MODE':\n    case 'UNSELECT_FUN_MODE':\n      return Object.assign({}, state, {\n         funMode: action.ifSelectFunMode\n      })\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport reducer from './reducers/index';\nimport { BrowserRouter as Router} from 'react-router-dom';\n\nimport ApolloClient from 'apollo-boost';\nimport {ApolloProvider} from 'react-apollo';\n\nconst client = new ApolloClient({\n  uri: 'https://bingwangprofile.herokuapp.com/graphql'\n})\n\nexport const initialState = {\n  selectedExperienceCategory: [],\n  experiences: [],\n  funMode: false\n}\n\nlet store = null\n\nif(process.env.NODE_ENV === 'production') {\n    store = createStore(\n      reducer,\n      initialState\n    );\n} else {\n    store = createStore(\n      reducer,\n      initialState,\n      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    );\n}\n\n// const store = createStore(\n//   reducer,\n//   initialState,\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n// );\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Provider store={store}>\n      <Router><App /></Router>\n    </Provider>\n  </ApolloProvider>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}